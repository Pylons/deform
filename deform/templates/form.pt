<form
  id="${field.formid}"
  action="${field.action}"
  method="${field.method}"
  enctype="multipart/form-data"
  accept-charset="utf-8"
  i18n:domain="deform"
  tal:attributes="class field.css_class">

  <fieldset class="deformFormFieldset">

    <legend tal:condition="field.title">${field.title}</legend>

    <input type="hidden" name="_charset_" />
    <input type="hidden" name="__formid__" value="${field.formid}"/>
    <div class="error" tal:condition="field.error">
      <h3 i18n:translate=""
          >There was a problem with your submission</h3>
      <p i18n:translate=""
         >Errors have been highlighted below</p>
    </div>
    <ul>
      <li class="section first" tal:condition="field.title">
        <h3>${field.title}</h3>
        <div tal:condition="field.description">${field.description}</div>
      </li>
      
      <li tal:define="rndr field.renderer;
                      tmpl field.widget.item_template"
          tal:repeat="f field.children"
          tal:replace="structure 
                       rndr(tmpl,field=f,cstruct=cstruct.get(f.name, null))"/>
      
      <li class="buttons">
        <tal:block repeat="button field.buttons">
          <button
              tal:attributes="disabled button.disabled"
              id="${field.formid+button.name}"
              name="${button.name}"
              type="${button.type}"
              class="btnText submit"
              value="${button.value}">
            <span>${button.title}</span>
          </button>
        </tal:block>
      </li>
      
    </ul>
    
  </fieldset>

<script type="text/javascript" tal:condition="field.use_ajax">
// <![CDATA[
  deform.addCallback(
     '${field.formid}',
     function(oid) {
         var target = $('#' + oid);
         var options = {
           target: target,
           // Decide about IFRAME usage only depending on the
           // presence of file INPUTs. Overrides the default
           // behavior of the plugin that otherwise looks at the
           // enctype too.
           iframe: target.find('input:file').length > 0,
           replaceTarget: true
         };
         var extra_options = ${field.ajax_options};
         var name;
         if (extra_options) {
           for (name in extra_options) {
             options[name] = extra_options[name];
           };
         };
         target.ajaxForm(options);
   });
// ]]>
</script>

</form>
